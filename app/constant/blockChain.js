"use strict";

//公寓配置
const roomInputParams = {
  groupId: 1,
  signUserId: "ae85ce1015f54a00b199bcc2b176acb6",
  contractAbi: [
    {
      constant: true,
      inputs: [
        { name: "name", type: "string" },
        { name: "landlord", type: "string" },
      ],
      name: "getAppartment",
      outputs: [
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "uint256[]" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "oldLoadlord", type: "string" },
        { name: "name", type: "string" },
      ],
      name: "removeLAppartment",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "name", type: "string" },
        { name: "_position", type: "string" },
        { name: "_landlord", type: "string" },
        { name: "_phone", type: "string" },
        { name: "_describe", type: "string" },
        { name: "_pricesByOneday", type: "uint256" },
      ],
      name: "setAppartment",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "_landlord", type: "string" }],
      name: "isExistLandlord",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_name", type: "string" },
        { name: "_position", type: "string" },
        { name: "_landlord", type: "string" },
        { name: "_phone", type: "string" },
        { name: "_describe", type: "string" },
        { name: "_pricesByOneday", type: "uint256" },
      ],
      name: "increaseAppartment",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "a", type: "string" },
        { name: "b", type: "string" },
      ],
      name: "isSon",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ name: "name", type: "string" }],
      name: "removeAppartment",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "_name", type: "string" }],
      name: "isExistAppartment",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ name: "userAddress", type: "address" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "constructor",
    },
  ],
  contractAddress: "0x9d38508fe7a1a20d369414fe56d7e780e22c8c2d",
  funcName: "getAppartment",
  funcParam: ["", ""],
  useCns: false,
};
//公共设施配置
const commonInputParms = {
  groupId: 1,
  signUserId: "ae85ce1015f54a00b199bcc2b176acb6",
  contractAbi: [
    {
      constant: true,
      inputs: [
        { name: "position", type: "string" },
        { name: "typeNum", type: "uint256" },
      ],
      name: "isExistType",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "position", type: "string" },
        { name: "typeNum", type: "uint256" },
      ],
      name: "removeType",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "_name", type: "string" },
        { name: "_landlord", type: "string" },
      ],
      name: "getType",
      outputs: [
        { name: "name", type: "string[]" },
        { name: "landlord", type: "string[]" },
        { name: "phone", type: "string[]" },
        { name: "position", type: "string[]" },
        { name: "describe", type: "string[]" },
        { name: "typeNum", type: "uint256[]" },
        { name: "price", type: "uint256[]" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "name", type: "string" },
        { name: "landlord", type: "string" },
        { name: "phone", type: "string" },
        { name: "position", type: "string" },
        { name: "describe", type: "string" },
        { name: "typeNum", type: "uint256" },
        { name: "price", type: "uint256" },
      ],
      name: "insertFacilityType",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "position", type: "string" }],
      name: "isExistFacility",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_landlord", type: "string" },
        { name: "_phone", type: "string" },
        { name: "_position", type: "string" },
        { name: "_describe", type: "string" },
        { name: "_typeNum", type: "uint256" },
        { name: "_price", type: "uint256" },
      ],
      name: "setType",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ name: "userAddress", type: "address" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "constructor",
    },
  ],
  contractAddress: "0x6ef7043c354f559e725102247c658260bfb45fb1",
  funcName: "getType",
  funcParam: ["", ""],
  useCns: false,
};

//租赁管理订单的给区块链后台的默认参数,还有信用管理
const caseInputParams = {
  groupId: 1,
  signUserId: "ae85ce1015f54a00b199bcc2b176acb6",
  contractAbi: [
    {
      constant: true,
      inputs: [
        { name: "pageNum", type: "uint256" },
        { name: "_startDate", type: "uint256" },
        { name: "_finishDate", type: "uint256" },
        { name: "_orderId", type: "string" },
        { name: "_name", type: "string" },
        { name: "_state", type: "uint256" },
        { name: "_orderType", type: "uint256" },
      ],
      name: "getOrder",
      outputs: [
        { name: "", type: "uint256" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "uint256[]" },
        { name: "", type: "uint256[]" },
        { name: "", type: "string[]" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_userName", type: "string" },
        { name: "_userId", type: "string" },
        { name: "_orderId", type: "string" },
        { name: "_Name", type: "string" },
        { name: "_orderTime", type: "uint256" },
        { name: "_startDate", type: "uint256" },
        { name: "_finishDate", type: "uint256" },
      ],
      name: "increaseFacilityOrder",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "pageNum", type: "uint256" },
        { name: "_userId", type: "string" },
        { name: "_orderId", type: "string" },
        { name: "_reason", type: "string" },
      ],
      name: "getBreakOrder",
      outputs: [
        { name: "", type: "uint256" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ name: "_orderId", type: "string" }],
      name: "isExistOrderId",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_orderId", type: "string" },
        { name: "_state", type: "uint256" },
        { name: "_reason", type: "string" },
      ],
      name: "setOrder",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_orderId", type: "string" },
        { name: "_reason", type: "string" },
      ],
      name: "deduceCredit",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_userName", type: "string" },
        { name: "_userId", type: "string" },
        { name: "_orderId", type: "string" },
        { name: "_Name", type: "string" },
        { name: "_orderTime", type: "uint256" },
        { name: "_startDate", type: "uint256" },
        { name: "_finishDate", type: "uint256" },
      ],
      name: "increaseAppartmentOrder",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ name: "userAddress", type: "address" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "constructor",
    },
  ],
  contractAddress: "0xa90bc58ee086ffe7367dac127243f1e483d88d82",
  funcName: "",
  funcParam: [],
  useCns: false,
};
//用户管理
const userInputParams = {
  groupId: 1,
  signUserId: "ae85ce1015f54a00b199bcc2b176acb6",
  contractAbi: [
    {
      constant: false,
      inputs: [
        { name: "_id", type: "string" },
        { name: "_decreaseNum", type: "uint256" },
      ],
      name: "decreaseCredit",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "pageNum", type: "uint256" },
        { name: "_username", type: "string" },
        { name: "_userId", type: "string" },
        { name: "_usermail", type: "string" },
      ],
      name: "getUser",
      outputs: [
        { name: "", type: "uint256" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "string[]" },
        { name: "", type: "uint256[]" },
        { name: "", type: "uint256[]" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_userAddress", type: "address" },
        { name: "_username", type: "string" },
        { name: "_userpassword", type: "string" },
        { name: "_userType", type: "uint256" },
        { name: "_phone", type: "string" },
        { name: "_mail", type: "string" },
        { name: "_signatureId", type: "string" },
        { name: "_userId", type: "string" },
      ],
      name: "createUser",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "condition1", type: "string" },
        { name: "_userpassword", type: "string" },
      ],
      name: "login",
      outputs: [
        { name: "", type: "string" },
        { name: "", type: "string" },
      ],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_id", type: "string" },
        { name: "_amount", type: "uint256" },
      ],
      name: "increaseAmount",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ name: "money", type: "uint256" }],
      name: "decreaseAmount",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "owner",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "_username", type: "string" }],
      name: "isExitLandl",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "_username", type: "string" }],
      name: "isExitUsername",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "a", type: "string" },
        { name: "b", type: "string" },
      ],
      name: "isSon",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "getUserNum",
      outputs: [{ name: "num", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_id", type: "string" },
        { name: "_increaseNum", type: "uint256" },
      ],
      name: "increaseCredit",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "constructor",
    },
  ],
  contractAddress: "0x8a59921cbbbc47ad0264e69d3dddff3331986226",
  funcName: "getUser",
  funcParam: [1, "", "", ""],
  useCns: false,
};
module.exports = {
  roomInputParams,
  commonInputParms,
  caseInputParams,
  userInputParams,
};
